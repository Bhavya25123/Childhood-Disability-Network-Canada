name: ⚙️ Sprint4-SendLetter

on:
  push:
    branches: [ sprint4-SendLetter ]
  pull_request:

jobs:
  e2e:
    runs-on: ubuntu-latest

    # Needed to create PRs with GITHUB_TOKEN
    permissions:
      contents: write
      pull-requests: write

    env:
      BACKEND_DIR: Backend
      FRONTEND_DIR: CDNC-frontend
      NODE_VERSION: 18
      FRONTEND_PORT: 8080
      BACKEND_PORT: 5001

    steps:
      - name: ⬇️ Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🧪 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # ---------- Backend (background) ----------
      - name: 📦 Install Backend Dependencies
        working-directory: ${{ env.BACKEND_DIR }}
        run: npm ci

      - name: 🟢 Start Backend
        working-directory: ${{ env.BACKEND_DIR }}
        env:
          # Provide both names in case code reads either
          MONGODB_URI: ${{ secrets.MONGO_URI }}
          MONGO_URI:   ${{ secrets.MONGO_URI }}
          JWT_SECRET:  ${{ secrets.JWT_SECRET || secrets.JWT_seceret }}
          PORT:        ${{ env.BACKEND_PORT }}
        run: |
          nohup npm run dev > ../backend.log 2>&1 &
          echo $! > ../backend.pid

      # ---------- Frontend (background) ----------
      - name: 📦 Install Frontend Dependencies
        working-directory: ${{ env.FRONTEND_DIR }}
        run: npm ci

      - name: 🖥️ Start Frontend (Vite on 8080)
        working-directory: ${{ env.FRONTEND_DIR }}
        env:
          VITE_API_BASE_URL: http://localhost:${{ env.BACKEND_PORT }}
        run: |
          nohup npm run dev -- --port $FRONTEND_PORT --strictPort > ../frontend.log 2>&1 &
          echo $! > ../frontend.pid

      # ---------- Tail logs + Wait ----------
      - name: 🪵 Tail logs (background)
        run: |
          tail -n +1 -f backend.log frontend.log &
          echo $! > tail.pid

      - name: ⏳ Wait for frontend to be ready
        run: npx wait-on http://localhost:8080 --timeout 120000

      # ---------- Cypress ----------
      - name: 🧪 Run Cypress tests
        uses: cypress-io/github-action@v6
        with:
          working-directory: CDNC-frontend
          install: false
          config-file: cypress.config.cjs
          wait-on: 'http://localhost:8080'
          wait-on-timeout: 120000

      # ---------- Create/Update PR master -> main if tests passed ----------
      - name: 🔀 Open PR to master
        if: success() && github.event_name == 'push' && github.ref == 'refs/heads/sprint4-SendLetter'
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            // Is there already an open PR from sprint4-SendLetter -> master?
            const { data: openPRs } = await github.rest.pulls.list({
              owner,
              repo,
              state: 'open',
              head: `${owner}:sprint4-SendLetter`,
              base: 'master'
            });
            if (openPRs.length) {
              core.info(`PR already open: #${openPRs[0].number}`);
            } else {
              const { data: pr } = await github.rest.pulls.create({
                owner,
                repo,
                title: "✅ E2E passed: Merge sprint4-SendLetter → master",
                head: "sprint4-SendLetter",
                base: "master",
                body: "Auto-created after Cypress E2E passed on sprint4-SendLetter."
              });
              core.info(`Created PR #${pr.number}`);
            }

      # ---------- Artifacts & Cleanup ----------
      - name: 📎 Upload Cypress Artifacts (on fail)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-artifacts
          path: |
            CDNC-frontend/cypress/screenshots
            CDNC-frontend/cypress/videos
            backend.log
            frontend.log

      - name: 🧹 Stop Servers & Show Logs
        if: always()
        run: |
          kill $(cat tail.pid) 2>/dev/null || true
          kill $(cat backend.pid) 2>/dev/null || true
          kill $(cat frontend.pid) 2>/dev/null || true
          echo "—— BACKEND LOG ——"; tail -n 200 backend.log || true
          echo "—— FRONTEND LOG ——"; tail -n 200 frontend.log || true
